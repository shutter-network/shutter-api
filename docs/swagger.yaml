definitions:
  error.Http:
    properties:
      description:
        type: string
      metadata:
        type: string
      statusCode:
        type: integer
    type: object
  usecase.GetDataForEncryptionResponse:
    properties:
      eon:
        type: integer
      eonKey:
        type: string
      identity:
        type: string
      identityPrefix:
        type: string
    type: object
  usecase.GetDecryptionKeyResponse:
    properties:
      decryptionKey:
        type: string
      decryptionTimestamp:
        type: integer
      identity:
        type: string
    type: object
info:
  contact: {}
  title: Shutter service API
paths:
  /get_data_for_encryption:
    get:
      description: This endpoint provides retrieval of all the necessary data required
        by users for encrypting any message
      parameters:
      - description: Ethereum address associated with the identity. If you are registering
          the identity yourself, pass the address of the account making the registration.
          If you want the API to register the identity, pass the address TBD.
        in: query
        name: address
        required: true
        type: string
      - description: Optional identity prefix. You can generate it on your end and
          pass it to this endpoint, or allow the API to randomly generate one for
          you.
        in: query
        name: identityPrefix
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.GetDataForEncryptionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Http'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Http'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Http'
      summary: Provides data necessary to allow encryption
      tags:
      - Crypto
  /get_decryption_key:
    get:
      description: Retrieves a decryption key for a given registered identity
      parameters:
      - description: Identity associated with the decryption key
        in: query
        name: identity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.GetDecryptionKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Http'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Http'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Http'
      summary: Get decryption key
      tags:
      - Crypto
swagger: "2.0"
