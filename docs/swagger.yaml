definitions:
  error.Http:
    properties:
      description:
        type: string
      metadata:
        type: string
      statusCode:
        type: integer
    type: object
  service.RegisterIdentityRequest:
    properties:
      decryptionTimestamp:
        type: integer
      identityPrefix:
        type: string
    type: object
  usecase.GetDataForEncryptionResponse:
    properties:
      eon:
        example: 1
        type: integer
      eon_key:
        example: 0x57af5437a84ef50e5ed75772c18ae38b168bb07c50cadb65fc6136604e662255
        type: string
      identity:
        example: 0x8c232eae4f957259e9d6b68301d529e9851b8642874c8f59d2bd0fb84a570c75
        type: string
      identity_prefix:
        example: 0x79bc8f6b4fcb02c651d6a702b7ad965c7fca19e94a9646d21ae90c8b54c030a0
        type: string
    type: object
  usecase.GetDecryptionKeyResponse:
    properties:
      decryption_key:
        example: 0x99a805fc26812c13041126b25e91eccf3de464d1df7a95d1edca8831a9ec02dd
        type: string
      decryption_timestamp:
        example: 1735044061
        type: integer
      identity:
        example: 0x8c232eae4f957259e9d6b68301d529e9851b8642874c8f59d2bd0fb84a570c75
        type: string
    type: object
  usecase.RegisterIdentityResponse:
    properties:
      eon:
        example: 1
        type: integer
      eon_key:
        example: 0x57af5437a84ef50e5ed75772c18ae38b168bb07c50cadb65fc6136604e662255
        type: string
      identity:
        example: 0x8c232eae4f957259e9d6b68301d529e9851b8642874c8f59d2bd0fb84a570c75
        type: string
      identity_prefix:
        example: 0x79bc8f6b4fcb02c651d6a702b7ad965c7fca19e94a9646d21ae90c8b54c030a0
        type: string
      tx_hash:
        example: 0x3026ad202ca611551377eef069fb6ed894eae65329ce73c56f300129694f12ba
        type: string
    type: object
info:
  contact: {}
  title: Shutter service API
paths:
  /decrypt_commitment:
    get:
      description: This endpoint provides a way for users to easily decrypt their
        encrypted message for which they have registered the identity for. Timestamp
        with which the identity was registered should have been passed for the message
        to be decrypted successfully.
      parameters:
      - description: Identity used for registeration and encrypting the message.
        in: query
        name: identity
        required: true
        type: string
      - description: Encrypted commitment is the users encrypted message.
        in: query
        name: encryptedCommitment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Http'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Http'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Http'
      summary: Allows anyone to decrypt their encrypted message.
      tags:
      - Crypto
  /get_data_for_encryption:
    get:
      description: This endpoint provides retrieval of all the necessary data required
        by users for encrypting any message.
      parameters:
      - description: Ethereum address associated with the identity. If you are registering
          the identity yourself, pass the address of the account making the registration.
          If you want the API to register the identity, pass the address TBD.
        in: query
        name: address
        required: true
        type: string
      - description: Optional identity prefix. You can generate it on your end and
          pass it to this endpoint, or allow the API to randomly generate one for
          you.
        in: query
        name: identityPrefix
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/usecase.GetDataForEncryptionResponse'
        "400":
          description: Invalid Get data for encryption request.
          schema:
            $ref: '#/definitions/error.Http'
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/error.Http'
      summary: Provides data necessary to allow encryption.
      tags:
      - Crypto
  /get_decryption_key:
    get:
      description: Retrieves a decryption key for a given registered identity.
      parameters:
      - description: Identity associated with the decryption key.
        in: query
        name: identity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/usecase.GetDecryptionKeyResponse'
        "400":
          description: Invalid Get decryption key request.
          schema:
            $ref: '#/definitions/error.Http'
        "404":
          description: Decryption key not found for the associated identity.
          schema:
            $ref: '#/definitions/error.Http'
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/error.Http'
      summary: Get decryption key.
      tags:
      - Crypto
  /register_identity:
    post:
      description: This endpoint allows user to register an identity which they used
        for encryption and set a particular timestamp for the release of the decryption
        key for the associated encrypted message.
      parameters:
      - description: Timestamp and Identity which user want to make the registration
          with.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.RegisterIdentityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/usecase.RegisterIdentityResponse'
        "400":
          description: Invalid Register identity request.
          schema:
            $ref: '#/definitions/error.Http'
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/error.Http'
      summary: Allows users to register any identity.
      tags:
      - Crypto
swagger: "2.0"
