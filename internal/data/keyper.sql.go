// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: keyper.sql

package data

import (
	"context"
)

const getDecryptionKey = `-- name: GetDecryptionKey :one

SELECT eon, epoch_id, decryption_key FROM decryption_key
WHERE eon = $1 AND epoch_id = $2
`

type GetDecryptionKeyParams struct {
	Eon     int64
	EpochID []byte
}

// write sql queries here
func (q *Queries) GetDecryptionKey(ctx context.Context, arg GetDecryptionKeyParams) (DecryptionKey, error) {
	row := q.db.QueryRow(ctx, getDecryptionKey, arg.Eon, arg.EpochID)
	var i DecryptionKey
	err := row.Scan(&i.Eon, &i.EpochID, &i.DecryptionKey)
	return i, err
}

const insertDecryptionKey = `-- name: InsertDecryptionKey :exec
INSERT INTO decryption_key (eon, epoch_id, decryption_key)
VALUES ($1, $2, $3)
`

type InsertDecryptionKeyParams struct {
	Eon           int64
	EpochID       []byte
	DecryptionKey []byte
}

func (q *Queries) InsertDecryptionKey(ctx context.Context, arg InsertDecryptionKeyParams) error {
	_, err := q.db.Exec(ctx, insertDecryptionKey, arg.Eon, arg.EpochID, arg.DecryptionKey)
	return err
}
